{"version":3,"file":"static/js/38.d4edf021.chunk.js","mappings":"+LAiGA,IA5FiB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WAClB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAoBXC,EAAe,SAACV,EAAYE,EAAME,EAAOO,GAC1B,aAAfX,GACFY,QAAQC,IAAI,mBAVQ,SAACX,EAAME,EAAOO,GACpC,IAAMG,EAAc,CAAEZ,KAAMA,EAAME,MAAOA,EAAOE,SAAUK,GAC1DC,QAAQC,IAAIC,GACZN,EAASO,EAAAA,EAAAA,SAAgBD,GAC1B,CAOGE,CAAgBd,EAAME,EAAOO,IAE7BC,QAAQC,IAAI,kBAGf,EAEKI,EAAmB,SAAAC,GACvB,MAAwBA,EAAEC,OAAlBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MACD,UAATlB,EACFG,EAASe,GACS,SAATlB,EACTC,EAAQiB,GAERb,EAAYa,EAEf,EAED,OACE,kBACEC,SAAU,SAAAH,GACRA,EAAEI,iBACFZ,EAAaV,EAAYE,EAAME,EAAOE,GA3C1B,SAAAN,GACG,aAAfA,GACFG,EAAQ,IACRE,EAAS,IACTE,EAAY,MAEZF,EAAS,IACTE,EAAY,IAEf,CAmCKgB,EACD,EALH,UAOkB,aAAfvB,IACC,SAAC,IAAD,CACEwB,MAAM,YACNC,KAAK,OACLC,SAAS,OAETC,MAAM,uBACNC,UAAQ,EACRC,WAAYZ,EACZa,WAAY5B,KAGhB,SAAC,IAAD,CACEsB,MAAM,QACNC,KAAK,QACLC,SAAS,QAETC,MAAM,kCACNC,UAAQ,EACRC,WAAYZ,EACZa,WAAY1B,KAEd,SAAC,IAAD,CACEoB,MAAM,WACNC,KAAK,WACLC,SAAS,WAETC,MAAM,mBACNC,UAAQ,EACRC,WAAYZ,EACZa,WAAYxB,KAEd,mBAAQmB,KAAK,SAAb,SACkB,aAAfzB,EAA4BA,EAAa,aAIjD,C,kEC9ED,UAZc,WACZ,OACE,iCACE,SAAC,IAAD,WACE,wCAEF,SAAC,IAAD,CAAUA,WAAY,YAI3B,C","sources":["components/userForm/UserForm.jsx","pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Input from 'components/input/input';\nimport { useDispatch } from 'react-redux';\nimport opAuth from 'redux/auth/opAuth';\n\nconst UserForm = ({ typeOfForm }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const formReset = typeOfForm => {\n    if (typeOfForm === 'Register') {\n      setName('');\n      setEmail('');\n      setPassword('');\n    } else {\n      setEmail('');\n      setPassword('');\n    }\n  };\n  const handleSubmitReg = (name, email, pass) => {\n    const credentials = { name: name, email: email, password: pass };\n    console.log(credentials)\n    dispatch(opAuth.register(credentials));\n  };\n\n  const handleSubmitLog = (email, pass) => {};\n\n  const handleSubmit = (typeOfForm, name, email, pass) => {\n    if (typeOfForm === 'Register') {\n      console.log('handleSubmitReg');\n      handleSubmitReg(name, email, pass);\n    } else {\n      console.log('handleSubmitLog');\n      handleSubmitLog(email, pass);\n    }\n  };\n\n  const handleChangeUser = e => {\n    const { name, value } = e.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'name') {\n      setName(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        handleSubmit(typeOfForm, name, email, password);\n        formReset();\n      }}\n    >\n      {typeOfForm === 'Register' && (\n        <Input\n          label=\"User Name\"\n          type=\"text\"\n          dataName=\"name\"\n          \n          title=\"User name for server\"\n          required\n          funcChange={handleChangeUser}\n          stateField={name}\n        />\n      )}\n      <Input\n        label=\"Email\"\n        type=\"email\"\n        dataName=\"email\"\n        \n        title=\"Should look like smth@and.so.on\"\n        required\n        funcChange={handleChangeUser}\n        stateField={email}\n      />\n      <Input\n        label=\"Password\"\n        type=\"password\"\n        dataName=\"password\"\n        \n        title=\"Should be secret\"\n        required\n        funcChange={handleChangeUser}\n        stateField={password}\n      />\n      <button type=\"submit\">\n        {typeOfForm === 'Register' ? typeOfForm : 'Log In'}\n      </button>\n    </form>\n  );\n};\n//TODO valid invalid CSS for inputs\nexport default UserForm;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\n// import UserFormLog from 'components/userFormLog/UserFormLog';\nimport UserForm from 'components/userForm/UserForm';\n\nconst Login = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <UserForm typeOfForm={'Login'}></UserForm>\n      {/* <UserFormLog></UserFormLog> */}\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["typeOfForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleSubmit","pass","console","log","credentials","opAuth","handleSubmitReg","handleChangeUser","e","target","value","onSubmit","preventDefault","formReset","label","type","dataName","title","required","funcChange","stateField"],"sourceRoot":""}